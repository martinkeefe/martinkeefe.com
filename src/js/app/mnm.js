import React, {Fragment,Component} from 'react'
import {NormalPage} from '../app'

const MNMS = [
	{num:'08', title:"Claudia’s Birthday", when:'September 2008', date:'2016-09-17'},
	{num:'09', title:"Minimalism and Modern Classical", when:'October 2008', date:'2016-09-17'},
	{num:'11', title:"Geof’s Birthday", when:'January 2009', date:'2016-09-17'},
	{num:'14', title:"’70s Albums", when:'April 2009', date:'2016-09-17'},
	{num:'15', title:"Astronomy Night", when:'May 2009', date:'2016-09-17'},
	{num:'18', title:"1969, the Shape of Things to Come", when:'October 2009', date:'2016-09-17'},
	{num:'22', title:"2009 Retrospective", when:'February 2010', date:'2016-09-17'},
	{num:'23', title:"Travel Broadens the Mind", when:'March 2010', date:'2016-09-17'},
	{num:'25', title:"Screen Gems", when:'June 2010', date:'2016-09-17'},
	{num:'27', title:"Cloak & Dagger, Music for Secret Agents", when:'August 2010', date:'2016-09-17'},
	{num:'29', title:"The Life Aquatic", when:'November 2010', date:'2016-09-17'},
	{num:'31', title:"The Hazards of Love", when:'February 2011', date:'2016-09-17'},
	{num:'33', title:"Genetic Drift", when:'July 2013', date:'2016-09-17'},
	{num:'34', title:"What Becomes of the Brokenhearted", when:'November 2013', date:'2016-09-17'},
]

const S3 = 'http://s3-eu-west-1.amazonaws.com/raiment57/'

function s3_src(mnm,i,ext) {
	const trk_num = ('0' + (i+1)).substr(-2)
    return `${S3}mnm${mnm.num}/${trk_num}.${ext}`
}

//------------------------------------------------------------------------------

class MondayPage extends NormalPage {
  	main() {
  		return (
  			<Fragment>
				<h1>Monday Night Martin</h1>
				<p>Once upon a time I lugged my PC to The Star on the first Monday of each month to play lovingly created playlists
				   as loudly as I could get away with accompanied by swirling visuals generated by WinAmp’s MilkDrop plugin
				   projected on to a screen. This had something of a cult following for a few years.</p>
				<h2>#{this.props.mnm.num}: {this.props.mnm.title} ({this.props.mnm.when})</h2>
				<p>{this.props.recs[0].trk_name || ''}</p>
				<PlayList key={this.props.mnm.num} mnm={this.props.mnm} recs={this.props.recs.slice(1)}/>
  			</Fragment>
  		)
	}
}

//------------------------------------------------------------------------------

class PlayList extends Component {
	constructor(props) {
		super(props)

		this.state = {index:0}
		this.audio = null
		this.volume = 1
		this.muted = false
	}

	render() {
		const items = this.props.recs.map((rec,i) => {
			const trk_num = ('0' + (i+1)).substr(-2)
			const img = s3_src(this.props.mnm, i, 'jpg')
			const src = s3_src(this.props.mnm, i, 'mp3')

			return <PlayListItem key={trk_num} list={this} mnm={this.props.mnm} num={trk_num} rec={rec} src={src} img={img} volume={this.volume} muted={this.muted}
				active={i == this.state.index}
				onEnded={() => this.onEnded()}
				onVolumeChange={e => this.onVolumeChange(e)}
				onClick={e => this.onClick(e,i)}/>
		})

		return (
			<div className="playlist">
				{items}
			</div>
		)
	}

	onEnded() {
		this.setState((prevState, props) => ({index: prevState.index + 1}))
	}

	onClick(e,i) {
		e.preventDefault()
		this.setState({index: i})
	}

	onVolumeChange(e) {
		this.volume = e.target.volume
		this.muted = e.target.muted
	}
}

//------------------------------------------------------------------------------

class PlayListItem extends Component {
	constructor(props) {
		super(props)

		this.audio = null
	}

	render() {
		const klass = 'item' + (this.props.active ? ' active' : '')
		const audio = <audio controls onEnded={this.props.onEnded} onVolumeChange={this.props.onVolumeChange} src={this.props.src} ref={ref => this.audio = ref}></audio>
		return (
			<div className={klass} onClick={this.props.onClick}>
				<img src={this.props.img}/>
				<div className="data">
					<p><big>{this.props.num}</big></p>
					<p><b>{this.props.rec.art_name}</b></p>
					<p>“{this.props.rec.trk_name}”</p>
					<p><i>{this.props.rec.alb_name}</i>, {this.props.rec.alb_year}</p>
				</div>
				{this.props.active ? audio : null}
			</div>
		)
	}

	update() {
		if (this.props.active && this.audio) {
			this.audio.src = this.props.src
			this.audio.volume = this.props.volume
			this.audio.muted = this.props.muted
			this.audio.play()
		}
	}

	componentDidUpdate() {
		this.update()
	}

	componentDidMount() {
		this.update()
	}
}

//------------------------------------------------------------------------------

export default function(app) {
	app.menu.push({ident:'mnm', text:'Monday Night Martin', href:"/mnm-09", sub:MNMS.map(mnm => {
			return {href:"/mnm/"+mnm.num, text:`#${mnm.num}: ${mnm.title}`, ident:mnm.num}
		})
	})

	app.add_route('/mnm/:mnm', context => {
  		const mnm = MNMS.find(val => val.num == context.params.mnm)
  		const recs = require('../../data/mnm/mnm'+mnm.num+'.csv')
		app.render(<MondayPage {...{app, context}} title={"Monday Night Martin - "+mnm.title} date={mnm.date} ident="mnm" mnm={mnm} recs={recs}/>)
	})

	MNMS.forEach(mnm => {
		app.redirect('/music/mnm'+mnm.num, '/mnm/'+mnm.num)
		app.redirect('/mnm-'+mnm.num, '/mnm/'+mnm.num)
	})
}
